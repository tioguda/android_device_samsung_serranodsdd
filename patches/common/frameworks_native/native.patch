From 8e9d34326128ec2b39e543e016ec21342d1c3deb Mon Sep 17 00:00:00 2001
From: mickybart <mickybart@pygoscelis.org>
Date: Tue, 13 Oct 2015 22:53:50 -0400
Subject: [IGNORE THIS PATCH] Add writeString16 with uint16_t for ABI compatibility 1/2

---
 include/binder/Parcel.h                 |  1 +
 libs/binder/Parcel.cpp                  | 11 +++++++++++
 services/powermanager/IPowerManager.cpp |  2 +-
 3 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/include/binder/Parcel.h b/include/binder/Parcel.h
index 3ada1e9..ffd4834 100644
--- a/include/binder/Parcel.h
+++ b/include/binder/Parcel.h
@@ -104,6 +104,7 @@ class Parcel {
     status_t            writeString8(const String8& str);
     status_t            writeString16(const String16& str);
     status_t            writeString16(const char16_t* str, size_t len);
+    status_t            writeString16(const uint16_t* str, size_t len);
     status_t            writeStrongBinder(const sp<IBinder>& val);
     status_t            writeWeakBinder(const wp<IBinder>& val);
     status_t            writeInt32Array(size_t len, const int32_t *val);
diff --git a/libs/binder/Parcel.cpp b/libs/binder/Parcel.cpp
index 7a4ddc4..9aabf20 100644
--- a/libs/binder/Parcel.cpp
+++ b/libs/binder/Parcel.cpp
@@ -841,6 +841,17 @@ status_t Parcel::writeString16(const char16_t* str, size_t len)
     return err;
 }
 
+/*
+ * This function with uint16_t just permit to keep ABI compatibility
+ * char16_t is now a default type of c11 and so it is not anymore
+ * a typdef of uint16_t
+ * (used at least by libril.so for nozomi)
+ */
+status_t Parcel::writeString16(const uint16_t* str, size_t len)
+{
+	return writeString16((char16_t*)str, len);
+}
+
 status_t Parcel::writeStrongBinder(const sp<IBinder>& val)
 {
     return flatten_binder(ProcessState::self(), val, this);
diff --git a/services/powermanager/IPowerManager.cpp b/services/powermanager/IPowerManager.cpp
index ec864ee..c78e4dd 100644
--- a/services/powermanager/IPowerManager.cpp
+++ b/services/powermanager/IPowerManager.cpp
@@ -55,7 +55,7 @@ class BpPowerManager : public BpInterface<IPowerManager>
         data.writeString16(tag);
         data.writeString16(packageName);
         data.writeInt32(0); // no WorkSource
-        data.writeString16(NULL, 0); // no history tag
+        data.writeString16((char16_t*)NULL, 0); // no history tag
         return remote()->transact(ACQUIRE_WAKE_LOCK, data, &reply,
                 isOneWay ? IBinder::FLAG_ONEWAY : 0);
     }
